# SPDX-FileCopyrightText: 2025 Frans van Dorsselaer
#
# SPDX-License-Identifier: GPL-3.0-only

---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Build

on:
  workflow_dispatch:
  workflow_call:

permissions:
  contents: read
  actions: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install tooling
        run: |
          sudo apt-get update
          sudo apt-get install gcc-aarch64-linux-gnu

      - name: Build libudev (x64)
        run: |
          cd libudev-zero
          make clean
          make DESTDIR=x64 install-static

      - name: Build libudev (arm64)
        run: |
          cd libudev-zero
          make clean
          make CC=aarch64-linux-gnu-gcc AR=aarch64-linux-gnu-ar DESTDIR=arm64 install-static

      - name: Prepare building usbip
        run: |
          cd WSL2-Linux-Kernel/tools/usb/usbip
          aclocal
          libtoolize
          autoheader
          autoconf
          automake --add-missing

      - name: Build usbip (x64)
        run: |
          cd WSL2-Linux-Kernel/tools/usb/usbip
          ./configure --disable-shared \
            CFLAGS=-I`realpath ../../../../libudev-zero/x64/usr/local/include` \
            LDFLAGS="--static -Wl,--strip-all  -L`realpath ../../../../libudev-zero/x64/usr/local/lib`"
          make clean
          make -C libsrc
          make -C src usbip
          mkdir -p "${{ github.workspace }}/x64"
          cp src/usbip "${{ github.workspace }}/x64"

      - name: Build usbip (arm64)
        run: |
          cd WSL2-Linux-Kernel/tools/usb/usbip
          ./configure --host=aarch64-linux-gnu --disable-shared \
            CFLAGS=-I`realpath ../../../../libudev-zero/arm64/usr/local/include` \
            LDFLAGS="--static -Wl,--strip-all  -L`realpath ../../../../libudev-zero/arm64/usr/local/lib`"
          make clean
          make -C libsrc
          make -C src usbip
          mkdir -p "${{ github.workspace }}/arm64"
          cp src/usbip "${{ github.workspace }}/arm64"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-binaries
          path: |
            x64/
            arm64/
